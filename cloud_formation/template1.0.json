{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "EC2 Provision: Create a new VPC, and provision EC2 in public subnet, successfully launching this using CloudFormation stack",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern" : "[-_ a-zA-Z0-9]*",
      "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "VpcCidr" : {
      "Description" : "CIDR address for the VPC to be created.",
      "Type" : "String",
      "Default" : "10.0.0.0/16"
    },
    "PublicSubnetVar" : {
      "Description" : "Address range for a public subnet to be created in AZ1.",
      "Type" : "String",
      "Default" : "10.0.0.0/24"
    },    
    "InstanceType" : {
	  "Description" : "Instance1 EC2 instance type",
	  "Type" : "String",
	  "Default" : "t2.micro",
	  "AllowedValues" : [ "t2.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.medium","m3.xlarge","c4.xlarge","c4.4xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","c4.large","cc2.8xlarge","cg1.4xlarge"],
	  "ConstraintDescription" : "must be a valid EC2 instance type."
	},
    "AvailabilityZone1" : {
      "Description" : "First AZ to use for PublicSubnet1/PrivateSubnet1.",
      "Type" : "String",
      "Default" : "us-east-1a"
    },
	"LatestAmiId" : {
		"Type" : "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
		"Default" : "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
	}
  },

  "Mappings" : {
    "AWSInstanceMapping" : {
      "t2.micro"    : { "Arch" : "64" },
      "t2.small"    : { "Arch" : "64" },
      "t2.medium"   : { "Arch" : "64" },
      "t2.large"    : { "Arch" : "64" },
      "m3.medium"   : { "Arch" : "64" },
      "m4.large"   : { "Arch" : "64" },
      "m4.xlarge"  : { "Arch" : "64" },
      "m4.2xlarge"  : { "Arch" : "64" }
    },

    "InstanceAMI" : {
      "us-east-1"      : { "64" : "ami-035be7bafff33b6b6" }
    }
  },

  "Resources" : {

   "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : "10.0.0.0/16",
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }
        ]
      }
    },

    "PublicSubnet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "CidrBlock" : { "Ref" : "PublicSubnetVar" },
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }
        ]
      }
    },
	
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },

    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
	  "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },
	
    "PubSubnetRTAssoc" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

	"PublicNetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : {"Ref" : "VPC"},
        "Tags" : [
          {"Key" : "Application", "Value" : { "Ref" : "AWS::StackName"} }
        ]
      }
    },
	
	"InboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "0", "To" : "65535"}
      }
    },

    "InboundDynamicPortsPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"},
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "OutboundHTTPPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "80", "To" : "80"},
        "PortRange" : {"From" : "22", "To" : "22"}
      }
    },

    "OutBoundDynamicPortPublicNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : {"Ref" : "PublicNetworkAcl"},
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : {"From" : "1024", "To" : "65535"}
      }
    },
	
	"PublicSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "PublicSubnet" },
        "NetworkAclId" : { "Ref" : "PublicNetworkAcl" }
      }
    },
	
	"InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable HTTP access",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0"},
                                   { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0"} ],
        "Tags" : [
        {"Key": "Name", "Value": "Project_EC2_sg"}
         ]
	  }
	},
	"PubInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "InstanceType" : { "Ref" : "InstanceType" },
		"ImageId" : { "Ref" : "LatestAmiId"},
		"NetworkInterfaces" : [
			{ 
			"DeviceIndex" : "0",
			"AssociatePublicIpAddress" : "true",
			"DeleteOnTermination" : "true",
			"SubnetId" : { "Ref" : "PublicSubnet" },
			"GroupSet" : [ { "Ref" : "InstanceSecurityGroup" } ]
			}
		],
        "Tags" : [
			{"Key": "Name", "Value": "Project_Instance"}
         ],
         "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
			"#!/bin/bash -ex\n",
			"apt-get update"
			]]}}
	  }
	}
   },

  "Outputs" : {
    "VPCID" : {
      "Description" : "VPC Info.",
      "Value" : { "Fn::Join" : [ "", [ { "Ref" : "VPC" }, " (", { "Ref" : "VpcCidr" }, ")" ]] }
    },
    "PublicSubnet" : {
      "Description" : "Public Subnet #1.",
      "Value" : { "Fn::Join" : [ "", [ { "Ref" : "PublicSubnetVar" }, " (", { "Ref" : "PublicSubnet" }, ") ", { "Ref" : "AvailabilityZone1" } ]] }
    },
    "PublicRouteTable" : {
      "Description" : "Public Route Table.",
      "Value" : { "Fn::Join" : [ "", [ { "Ref" : "PublicRouteTable" }, " (0.0.0.0/0 -> ", { "Ref" : "InternetGateway" }, ")" ]] }
    },
	"EC2IP" : {
      "Description" : "EC2 Info.",
      "Value" : { "Fn::GetAtt" : [ "PubInstance", "PublicIp" ]}
    }
  }
}